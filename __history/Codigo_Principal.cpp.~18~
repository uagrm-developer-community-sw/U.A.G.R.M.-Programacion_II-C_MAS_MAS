//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Codigo_Principal.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TUCFormulario *UCFormulario;
//---------------------------------------------------------------------------
__fastcall TUCFormulario::TUCFormulario(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
//INPUTBOX
void __fastcall TUCFormulario::BtGrpEjemploItems0Click(TObject *Sender)
{
int valor_entero;
float valor_real;
String valor_cadena;

//Ejemplo
//InputBox("ENTRADA DE DATOS","Ingrese una expresion","expresion");

//Enteros
//valor_entero = StrToInt(InputBox("ENTRADA DE DATOS", "Ingrese un numero entero",""));

//Cadena
//valor_cadena = InputBox("ENTRADA DE DATOS","Ingrese una cadena","");

//Real
//valor_real = StrToFloat(InputBox("ENTRADA DE DATOS","Ingrese el numero real",""));
}
//---------------------------------------------------------------------------
//                          NUMEROS NATURALES
//---------------------------------------------------------------------------

//PROGRAMA QUE MUESTRA LOS PRIMEROS N NÚMEROS NATURALES
void Mostrar_n_num_naturales(int n){

	if(n!=0){
		Mostrar_n_num_naturales(n-1);
		ShowMessage(n);
	}
}

//---------------------------------------------------------------------------
//PROGRAMA QUE CUENTA LA CANTIDAD LOS NÚMEROS NATURALES INGRESADOS POR TECLADO.
int Mostrar_cantidad_numeros_naturales(int n){
	int c=0;
	if(n<10){
	c = 1;
	}else{
		c=Mostrar_cantidad_numeros_naturales(n/10);
		c=c+1;
	}
	return c;
}
//---------------------------------------------------------------------------
//PROGRAMA QUE MUESTRA LA CANTIDAD DE DIGITOS PARES QUE ESTAN INMEDIATAMENTE ANTES DE UNO IMPAR.
byte Cantidad_Digitos_Pares_Antes_Impar(Cardinal n){
byte i, na;
	if(n<10){
	i=0;
	}else{
		na=n%100;
		i=Cantidad_Digitos_Pares_Antes_Impar(n/100);
		if (((na/10)%2==0) && ((na % 10)%2!=0)) {
			i++;
		}
	}
		return i;
}
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//                          		CADENAS
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//                          		VECTORES
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//                          		MATRICES
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//            			 LLAMADA A LOS ALGORITMOS                          //
//---------------------------------------------------------------------------
void __fastcall TUCFormulario::BtGrpEjemploItems1Click(TObject *Sender)
{
String cadena="hola bolivia";
cadena.Delete(7,3);
ShowMessage(cadena);
}
//---------------------------------------------------------------------------
//PROGRAMA QUE MUESTRA LOS PRIMEROS N NÚMEROS NATURALES
void __fastcall TUCFormulario::BtGrpNumerosItems0Click(TObject *Sender)
{
int valor_entero;
valor_entero = StrToInt(InputBox("ENTRADA DE DATOS", "Ingrese un numero entero",""));
Mostrar_n_num_naturales(valor_entero);
}
//---------------------------------------------------------------------------

//PROGRAMA QUE CUENTA LA CANTIDAD LOS NÚMEROS NATURALES INGRESADOS POR TECLADO.

void __fastcall TUCFormulario::BtGrpNumerosItems12Click(TObject *Sender)
{
	txtSalida->Text= (IntToStr(Mostrar_cantidad_numeros_naturales(StrToInt(txtEntrada->Text))));
}
//---------------------------------------------------------------------------
//PROGRAMA QUE MUESTRA LA CANTIDAD DE DIGITOS PARES DE UN NUMERO
void __fastcall TUCFormulario::BtGrpNumerosItems6Click(TObject *Sender)
{
	txtSalida->Text= (IntToStr(Mostrar_cantidad_numeros_naturales(StrToInt(txtEntrada->Text))));
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//                                  EJEMPLOS
//---------------------------------------------------------------------------
//ISDIGIT -> verifica si es un digito, resultado 4
void __fastcall TUCFormulario::BtGrpEjemploItems5Click(TObject *Sender)
{
	//ShowMessage(isdigit('e')); //obtener el rango del caracter.
	ShowMessage(isdigit('1'));
}
//---------------------------------------------------------------------------
//ISALPHP -> verifica si es un caracter, resultado a 256
void __fastcall TUCFormulario::BtGrpEjemploItems6Click(TObject *Sender)
{
	ShowMessage(isalpha('1'));
	//ShowMessage(isalpha('P'));
}
//---------------------------------------------------------------------------
//ISALMUN -> verifica si es un caracter y digito, resultado a 4 y 256
void __fastcall TUCFormulario::BtGrpEjemploItems22Click(TObject *Sender)
{
	ShowMessage(isalnum('1'));
	ShowMessage(isalnum('P'));
	ShowMessage(isalnum('@'));
}
//---------------------------------------------------------------------------
//ISPUNCT -> verifica si es un caracter, resultado 16
void __fastcall TUCFormulario::BtGrpEjemploItems23Click(TObject *Sender)
{
	ShowMessage(ispunct('1'));
	ShowMessage(ispunct('P'));
	ShowMessage(ispunct('@'));
}
//---------------------------------------------------------------------------
//ISSPACE -> verifica si es un espacio, resultado 8
void __fastcall TUCFormulario::BtGrpEjemploItems24Click(TObject *Sender)
{
	ShowMessage(isspace('1'));
	ShowMessage(isspace('P'));
	ShowMessage(isspace('@'));
	ShowMessage(isspace(' '));
}
//---------------------------------------------------------------------------

